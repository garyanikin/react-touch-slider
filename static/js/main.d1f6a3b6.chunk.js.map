{"version":3,"sources":["App.js","index.js"],"names":["map","value","low1","high1","low2","high2","App","useState","index","movedIndex","down","state","setState","items","num","text","itemsLastIndex","length","currentIndex","bind","useDrag","_state","newIndex","mx","movement","width","target","clientWidth","delta","Math","max","min","moved","round","className","style","transform","offsetY","offsetX","display","paddingTop","justifyContent","item","DEFAULT_INDICATOR","transition","height","margin","borderRadius","background","oneStep","ACTIVE_INDICATOR","progress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1f6a3b6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useDrag } from \"@use-gesture/react\";\nimport \"./App.css\";\n\nconst DEFAULT_INDICATOR = 5;\nconst ACTIVE_INDICATOR = 15;\n\nfunction App() {\n  const [state, setState] = useState({\n    index: 0,\n    movedIndex: 0,\n    down: false,\n  });\n  const { index, movedIndex, down } = state;\n  const items = [\n    { num: 1, text: \"text\" },\n    { num: 2, text: \"another\" },\n    { num: 3, text: \"and\" },\n    { num: 4, text: \"one more\" },\n  ];\n  const itemsLastIndex = items.length - 1;\n  const currentIndex = map(down ? movedIndex : index, 0, 1, 0, itemsLastIndex);\n\n  // Set the drag hook and define component movement based on gesture data.\n  const bind = useDrag((_state) => {\n    const {\n      down,\n      movement: [mx],\n    } = _state;\n    const width = _state.target.clientWidth;\n    const delta = Math.max(Math.min(mx / width, 1), -1) * 0.7;\n    const moved = state.index + map(delta, -1, 1, 1, -1);\n    let newIndex;\n    if (delta < 0) {\n      newIndex = Math.min(\n        state.index +\n          Math.round(map(delta, 0, -1, 0, itemsLastIndex)) / itemsLastIndex,\n        1\n      );\n    } else {\n      newIndex = Math.max(\n        state.index -\n          Math.round(map(delta, 0, 1, 1, itemsLastIndex)) / itemsLastIndex,\n        0\n      );\n    }\n\n    setState({\n      ...state,\n      down,\n      index: !down ? newIndex : state.index,\n      movedIndex: Math.max(Math.min(moved, 1), 0),\n    });\n  });\n\n  return (\n    <div className=\"app\" {...bind()}>\n      <div key=\"numbers\" className=\"wrapper animated\">\n        {items.map(function mapNumbers({ num }, index) {\n          let style;\n\n          const isCurrent = index === currentIndex;\n          if (isCurrent) {\n            style = { transform: `translate3d(0, 0, 0)` };\n          } else {\n            const offsetY = map(index - currentIndex, -1, 1, -100, 100);\n            style = { transform: `translate3d(0, ${offsetY}%, 0)` };\n          }\n\n          return (\n            <div key={num} style={style} className=\"current\">\n              {num}\n            </div>\n          );\n        })}\n      </div>\n      <div key=\"text\" className=\"text-wrapper animated\">\n        {items.map(function mapText({ text }, index) {\n          let style;\n\n          const isCurrent = index === currentIndex;\n          if (isCurrent) {\n            style = { transform: `translate3d(0, 0, 0)` };\n          } else {\n            const offsetX = map(index - currentIndex, -1, 1, -30, 30);\n            style = { transform: `translate3d(${offsetX}vw, 0, 0)` };\n          }\n\n          return (\n            <div key={text} style={style} className=\"current-text\">\n              {text}\n            </div>\n          );\n        })}\n      </div>\n      <div\n        key=\"indicators\"\n        style={{\n          display: \"flex\",\n          paddingTop: \"1rem\",\n          justifyContent: \"center\",\n        }}\n      >\n        {items.map(function mapIndicators(item, index) {\n          let style = {\n            width: DEFAULT_INDICATOR + \"px\",\n            transition: \"width 300ms\",\n            height: \"5px\",\n            margin: \"0 2px\",\n            borderRadius: \"5px\",\n            background: \"black\",\n            display: \"inline-block\",\n          };\n\n          const isCurrent = index === currentIndex;\n          const oneStep = 1 / itemsLastIndex;\n          if (isCurrent) {\n            style.width = ACTIVE_INDICATOR + \"px\";\n          } else if (\n            index - oneStep > currentIndex ||\n            index + oneStep < currentIndex\n          ) {\n            style.width = DEFAULT_INDICATOR + \"px\";\n          } else if (index < currentIndex) {\n            const progress = (currentIndex - index) / oneStep;\n            style.width =\n              map(progress, 0, 1, ACTIVE_INDICATOR, DEFAULT_INDICATOR) + \"px\";\n          } else if (index > currentIndex) {\n            const progress = (index - currentIndex) / oneStep;\n            style.width =\n              map(progress, 0, 1, DEFAULT_INDICATOR, ACTIVE_INDICATOR) + \"px\";\n          }\n\n          return <div key={index} style={style}></div>;\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction map(value, low1, high1, low2, high2) {\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}